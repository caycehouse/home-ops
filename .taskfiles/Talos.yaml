---
version: "3"

vars:
  TALOS_DIR: "{{.ROOT_DIR}}/kubernetes/talos"
  TALHELPER_SECRET_FILE: "{{.TALOS_DIR}}/talsecret.sops.yaml"
  TALHELPER_CONFIG_FILE: "{{.TALOS_DIR}}/talconfig.yaml"

tasks:

  apply:
    desc: Apply talos config on a node
    dir: "{{.TALOS_DIR}}"
    cmd: talhelper gencommand apply | bash
    preconditions:
      - { msg: "Missing talhelper config file", sh: "test -f {{.TALHELPER_CONFIG_FILE}}" }

  apply-extras:
    desc: Apply extras
    dir: "{{.TALOS_DIR}}"
    cmds:
      - kubectl --kubeconfig {{.KUBECONFIG_FILE}} kustomize --enable-helm ./cilium | kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side --filename -
      - kubectl --kubeconfig {{.KUBECONFIG_FILE}} kustomize --enable-helm ./kubelet-csr-approver | kubectl apply --kubeconfig {{.KUBECONFIG_FILE}} --server-side --filename -
    preconditions:
      - { msg: "Missing kubeconfig", sh: "test -f {{.KUBECONFIG_FILE}}" }

  apply-insecure:
    desc: Apply talos config on a node
    dir: "{{.TALOS_DIR}}"
    cmd: talhelper gencommand apply --extra-flags=--insecure | bash
    preconditions:
      - { msg: "Missing talhelper config file", sh: "test -f {{.TALHELPER_CONFIG_FILE}}" }

  bootstrap:
    desc: Bootstrap the talos cluster
    dir: "{{.TALOS_DIR}}"
    cmd: talhelper gencommand bootstrap | bash
    preconditions:
      - { msg: "Missing talhelper config file", sh: "test -f {{.TALHELPER_CONFIG_FILE}}" }

  genconfig:
    desc: Generate talos config
    dir: "{{.TALOS_DIR}}"
    cmd: talhelper genconfig
    preconditions:
      - { msg: "Missing talhelper config file", sh: "test -f {{.TALHELPER_CONFIG_FILE}}" }

  gensecret:
    desc: Generate talos secret
    prompt: This will overwrite the existing secret... continue?
    dir: "{{.TALOS_DIR}}"
    cmds:
      - talhelper gensecret > {{.TALHELPER_SECRET_FILE}}
      - task: :sops:.encrypt-file
        vars:
          file: "{{.TALHELPER_SECRET_FILE}}"
    preconditions:
      - { msg: "Missing talhelper config file", sh: "test -f {{.TALHELPER_CONFIG_FILE}}" }

  genurl-iso:
    desc: Generate URL for Talos ISO image
    dir: "{{.TALOS_DIR}}"
    cmd: talhelper genurl iso
    preconditions:
      - { msg: "Missing talhelper config file", sh: "test -f {{.TALHELPER_CONFIG_FILE}}" }

  kubeconfig:
    desc: Generate talos kubeconfig
    dir: "{{.TALOS_DIR}}"
    cmd: until talhelper gencommand kubeconfig --extra-flags "{{.ROOT_DIR}} --force" | bash; do sleep 10; done

  upgrade-talos:
    desc: Upgrade talos on a node
    cmd: talosctl --nodes {{.node}} upgrade --image {{.image}} --preserve=true --reboot-mode=default
    requires:
      vars: ["node", "to"]
    preconditions:
      - { msg: "Node not found", sh: "talosctl --nodes {{.node}} get machineconfig" }

  upgrade-k8s:
    desc: Upgrade k8s on a node
    cmd: talosctl --nodes {{.node}} upgrade-k8s --to {{.to}}
    requires:
      vars: ["node", "to"]
    preconditions:
      - { msg: "Node not found", sh: "talosctl --nodes {{.node}} get machineconfig" }
