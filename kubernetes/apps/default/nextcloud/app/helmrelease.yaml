---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  interval: 30m
  chart:
    spec:
      chart: nextcloud
      version: 4.6.8
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
  install:
    remediation:
      retries: 3
    timeout: 60m
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
    timeout: 60m
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  values:
    image:
      repository: nextcloud
      tag: 28.0.5-fpm-alpine
    deploymentAnnotations:
      secret.reloader.stakater.com/reload: &secret nextcloud-secret
    cronjob:
      enabled: true
      resources:
        limits:
          memory: 1024M
        requests:
          cpu: 10m
          memory: 500M
    externalDatabase:
      enabled: true
      type: postgresql
      existingSecret:
        enabled: true
        secretName: *secret
        hostKey: POSTGRES_HOST
        databaseKey: POSTGRES_DB
        usernameKey: POSTGRES_USER
        passwordKey: POSTGRES_PASSWORD
    nextcloud:
      host: "nc.${SECRET_DOMAIN}"
      existingSecret:
        enabled: true
        secretName: *secret
        usernameKey: ADMIN_USER
        passwordKey: ADMIN_PASS
        # tokenKey: METRICS_TOKEN
      defaultConfigs:
        redis.config.php: false
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array (
            'trusted_proxies' => array(
              0 => '127.0.0.1',
              1 => '10.0.0.0/8',
              2 => '172.16.0.0/12',
              3 => '192.168.0.0/16',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
          );
        redis.config.php: |-
          <?php
          $CONFIG = array (
            'memcache.distributed' => '\OC\Memcache\Redis',
            'memcache.locking' => '\OC\Memcache\Redis',
            'redis' => array(
              'host' => 'dragonfly.database.svc.cluster.local',
              'port' => 6379,
              'dbindex' => 3
            ),
          );
      extraEnv:
        - name: OVERWRITEPROTOCOL
          value: https
      extraInitContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16
          envFrom:
            - secretRef:
                name: *secret
    nginx:
      ## You need to set an fpm version of the image for nextcloud if you want to use nginx!
      enabled: true
    ingress:
      enabled: true
      className: external
      annotations:
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
        gethomepage.dev/enabled: "true"
        gethomepage.dev/href: "https://nc.${SECRET_DOMAIN}"
        gethomepage.dev/description: Self-hosted file sharing
        gethomepage.dev/group: Storage
        gethomepage.dev/icon: nextcloud
        gethomepage.dev/name: Nextcloud
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/proxy-redirect-from: 'http://$host'
        nginx.ingress.kubernetes.io/proxy-redirect-to: 'https://$host'
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      tls:
        - hosts:
            - *app
    internalDatabase:
      enabled: false
    persistence:
      enabled: true
      existingClaim: *app
      nextcloudData:
        enabled: true
        existingClaim: "nextcloud-data"
    resources:
      limits:
        memory: 4G
      requests:
        cpu: 10m
        memory: 2G
    startupProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 360
      successThreshold: 1
    livenessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    # metrics:
    #   enabled: true
    #   https: true
    #   serviceMonitor:
    #     enabled: true
