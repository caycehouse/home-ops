---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 58.2.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: openebs
      namespace: openebs-system
  values:
    crds:
      enabled: true
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: tailscale
        tls:
          - hosts:
              - alertmanager
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/href: "https://alertmanager.${SECRET_TS_DOMAIN}"
          gethomepage.dev/description: Notification orchestration for Prometheus
          gethomepage.dev/group: Utilities
          gethomepage.dev/icon: alertmanager
          gethomepage.dev/name: Alertmanager
          gethomepage.dev/app: alertmanager
      alertmanagerSpec:
        replicas: 3
        useExistingSecret: true
        configSecret: kube-prometheus-stack-secret
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-hostpath
              resources:
                requests:
                  storage: 1Gi
    kubelet:
      enabled: true
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      endpoints: &cp
        - 192.168.7.52
        - 192.168.7.53
        - 192.168.7.55
    kubeEtcd:
      enabled: true
      endpoints: *cp
    kubeScheduler:
      enabled: true
      endpoints: *cp
    kubeProxy:
      enabled: false
    prometheus:
      ingress:
        enabled: true
        ingressClassName: tailscale
        pathType: Prefix
        tls:
          - hosts:
              - prometheus
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/href: "https://prometheus.${SECRET_TS_DOMAIN}"
          gethomepage.dev/description: Insightful Data Visualization
          gethomepage.dev/group: Utilities
          gethomepage.dev/icon: prometheus
          gethomepage.dev/name: Prometheus
          gethomepage.dev/app: prometheus
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        podMetadata:
          annotations:
            secret.reloader.stakater.com/reload: &secret kube-prometheus-stack-secret
        replicas: 3
        replicaExternalLabelName: __replica__
        scrapeInterval: 1m # Must match interval in Grafana Helm chart
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - auto-gomemlimit
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        image:
          registry: quay.io
          repository: prometheus/prometheus
          tag: v2.51.0-dedupelabels
        thanos:
          image: quay.io/thanos/thanos:${THANOS_VERSION}
          version: "${THANOS_VERSION#v}"
          objectStorageConfig:
            existingSecret:
              name: *secret
              key: objstore.yml
        retention: 2d
        retentionSize: 15GB
        externalLabels:
          cluster: home-cluster
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 1500Mi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: openebs-hostpath
              resources:
                requests:
                  storage: 20Gi
    nodeExporter:
      enabled: true
    prometheus-node-exporter:
      fullnameOverride: node-exporter
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      prometheus:
        monitor:
          enabled: true
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes
