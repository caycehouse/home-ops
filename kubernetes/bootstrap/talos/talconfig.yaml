# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.9.3
# renovate: datasource=docker depName=ghcr.io/siderolabs/kubelet
kubernetesVersion: v1.32.1

clusterName: &cluster main
endpoint: https://192.168.42.120:6443

clusterPodNets:
  - "10.69.0.0/16"
clusterSvcNets:
  - "10.96.0.0/16"

additionalApiServerCertSans: &sans
  - "192.168.42.120"
  - "127.0.0.1"
additionalMachineCertSans: *sans

# Disable built-in Flannel to use Cilium
cniConfig:
  name: none

nodes:
  - hostname: k8s-0
    ipAddress: 192.168.42.10
    controlPlane: true
    installDiskSelector:
      model: PC SN520 NVMe WDC 256GB
    networkInterfaces:
      - interface: bond0
        bond:
          mode: active-backup
          deviceSelectors:
            - hardwareAddr: a4:bb:6d:7b:*
              driver: e1000e
        dhcp: true
        mtu: 1500
        vip:
          ip: 192.168.42.120
        vlans:
          - vlanId: 10
            dhcp: false
            mtu: 1500
          - vlanId: 70
            dhcp: false
            mtu: 1500

patches:
  # Configure containerd
  - |
    machine:
      files:
        - # Spegel
          op: create
          path: /etc/cri/conf.d/20-customization.part
          content: |
            [plugins."io.containerd.cri.v1.images"]
              discard_unpacked_layers = false

  # Configure NFS Mounts
  - |
    machine:
      files:
        - op: overwrite
          path: /etc/nfsmount.conf
          permissions: 0o644
          content: |
            [ NFSMount_Global_Options ]
            nfsvers=4.2
            hard=True
            nconnect=16
            noatime=True

  # Disable search domain everywhere
  - |-
    machine:
      network:
        disableSearchDomain: true

  # Enable host dns
  - |-
    machine:
      features:
        hostDNS:
          enabled: true
          resolveMemberNames: true
          forwardKubeDNSToHost: false

  # Configure kubelet
  - |-
    machine:
      kubelet:
        extraConfig:
          maxPods: 150
        nodeIP:
          validSubnets:
            - "192.168.42.0/24"

  # Mount openebs-hostpath in kubelet
  - |-
    machine:
      kubelet:
        extraMounts:
          - destination: /var/openebs/local
            type: bind
            source: /var/openebs/local
            options: ["bind", "rshared", "rw"]

  # Performance hacks
  - |-
    machine:
      install:
        extraKernelArgs:
          - apparmor=0              # Less security, faster puter
          - init_on_alloc=0         # Less security, faster puter
          - init_on_free=0          # Less security, faster puter
          - mitigations=off         # Less security, faster puter
          - security=none           # Less security, faster puter
          - talos.auditd.disabled=1 # Less security, faster puter

  # Custom sysctl settings
  - |-
    machine:
      sysctls:
        fs.inotify.max_user_watches: 1048576   # Watchdog
        fs.inotify.max_user_instances: 8192    # Watchdog
        net.core.default_qdisc: fq             # 2.5Gb/s
        net.core.rmem_max: 67108864            # 2.5Gb/s | Cloudflared / QUIC
        net.core.wmem_max: 67108864            # 2.5Gb/s | Cloudflared / QUIC
        net.ipv4.tcp_congestion_control: bbr   # 2.5Gb/s
        net.ipv4.tcp_fastopen: 3               # TCP Fast Open
        net.ipv4.tcp_mtu_probing: 1            # 2.5Gb/s
        net.ipv4.tcp_rmem: 4096 87380 33554432 # 2.5Gb/s
        net.ipv4.tcp_wmem: 4096 65536 33554432 # 2.5Gb/s
        net.ipv4.tcp_window_scaling: 1         # 2.5Gb/s
        vm.nr_hugepages: "1024"                # PostgreSQL

  # Various udev rules
  - |-
    machine:
      udev:
        rules:
          # Intel GPU
          - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

  # Enable network block device kernel module
  - |-
    machine:
      kernel:
        modules:
          - name: nbd

  # Enable MutatingAdmissionPolicy
  - |-
    cluster:
      apiServer:
        extraArgs:
          runtime-config: admissionregistration.k8s.io/v1alpha1=true
          feature-gates: MutatingAdmissionPolicy=true

controlPlane:
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: m
  patches:
    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        coreDNS:
          disabled: true
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - 192.168.42.0/24
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                plugins:
                  score:
                    disabled:
                      - name: ImageLocality
                pluginConfig:
                  - name: PodTopologySpread
                    args:
                      defaultingType: List
                      defaultConstraints:
                        - maxSkew: 1
                          topologyKey: kubernetes.io/hostname
                          whenUnsatisfiable: ScheduleAnyway

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - os:admin
            allowedKubernetesNamespaces:
              - actions-runner-system
              - kube-system

worker:
  nodeLabels:
    topology.kubernetes.io/region: *cluster
    topology.kubernetes.io/zone: w
