---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/caycehouse/plex
              tag: 1.40.2.8395-c67dce28e@sha256:344a42ba84ab1e4c2e357bdbc73888812055dd8c208868e9421861118b495b95
            env:
              TZ: ${TIMEZONE}
              NVIDIA_DRIVER_CAPABILITIES: all
              NVIDIA_VISIBLE_DEVICES: all
              PLEX_ADVERTISE_URL: https://plex.${SECRET_TS_DOMAIN}:443,http://192.168.4.6:32400
              PLEX_NO_AUTH_NETWORKS: 192.168.4.0/22
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 16Gi
                nvidia.com/gpu: 1
    defaultPodOptions:
      runtimeClassName: nvidia
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000]
        seccompProfile: { type: RuntimeDefault }
      nodeSelector:
        nvidia.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        controller: plex
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 192.168.4.6
        ports:
          http:
            port: 32400
    ingress:
      app:
        annotations:
          gethomepage.dev/description: Media streaming platform
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Starr
          gethomepage.dev/href: "https://plex.${SECRET_TS_DOMAIN}"
          gethomepage.dev/icon: plex
          gethomepage.dev/name: Plex
          gethomepage.dev/widget.type: plex
          gethomepage.dev/widget.url: http://plex.default.svc.cluster.local:32400
          gethomepage.dev/widget.key: "{{ `{{HOMEPAGE_VAR_PLEX_TOKEN}}` }}"
        className: tailscale
        hosts:
          - host: *app
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *app
    persistence:
      config:
        existingClaim: *app
      # Separate PVC for cache to avoid backing up cache files
      cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        type: nfs
        server: "${NAS_IP:=temp}"
        path: "${NFS_DATA_PATH:=temp}"
        globalMounts:
          - path: /data/media
            subPath: media
            readOnly: true
