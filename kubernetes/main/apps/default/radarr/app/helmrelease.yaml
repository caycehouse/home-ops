---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      radarr:
        initContainers:
          init-db:
            image:
              repository: ghcr.io/caycehouse/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: radarr-secret
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/caycehouse/radarr
              tag: 5.4.6.8723@sha256:bd5e228225475c5c1d96f73f5ddc5f5ae7d65fd0739539ddd96c1d7a0118a87e
            env:
              RADARR__AUTHENTICATION_METHOD: Forms
              RADARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 80
              RADARR__LOG_LEVEL: info
              RADARR__THEME: dark
              TZ: America/New_York
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    ingress:
      app:
        className: tailscale
        hosts:
          - host: *app
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        annotations:
          gethomepage.dev/description: Movie PVR
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Starr
          gethomepage.dev/href: "https://radarr.${SECRET_TS_DOMAIN}"
          gethomepage.dev/icon: radarr
          gethomepage.dev/name: Radarr
          gethomepage.dev/widget.type: radarr
          gethomepage.dev/widget.url: http://radarr.default.svc.cluster.local
          gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_RADARR_API_KEY}}"
        tls:
          - hosts:
              - *app
    persistence:
      config:
        existingClaim: *app
      tmp:
        type: emptyDir
      data:
        type: nfs
        server: "${NAS_IP:=temp}"
        path: "${NFS_DATA_PATH:=temp}"
        globalMounts:
          - path: /data
