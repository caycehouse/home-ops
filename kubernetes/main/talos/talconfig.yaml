# yaml-language-server: $schema=https://raw.githubusercontent.com/budimanjojo/talhelper/master/pkg/config/schemas/talconfig.json
---
# renovate: datasource=docker depName=ghcr.io/siderolabs/installer
talosVersion: v1.8.2
# renovate: depName=ghcr.io/siderolabs/kubelet datasource=docker
kubernetesVersion: v1.31.1

clusterName: "main"
endpoint: https://192.168.42.120:6443
clusterPodNets:
  - "10.69.0.0/16"
clusterSvcNets:
  - "10.96.0.0/16"
additionalApiServerCertSans: &sans
  - 127.0.0.1
  - 192.168.42.120
additionalMachineCertSans: *sans

# Disable built-in Flannel to use Cilium
cniConfig:
  name: none

nodes:
  - hostname: k8s-0
    ipAddress: "192.168.42.10"
    installDisk: /dev/sdb
    schematic:
      customization:
        extraKernelArgs:
          - cpufreq.default_governor=performance
          - intel_pstate=disable
          - mitigations=off
          - net.ifnames=0
        systemExtensions:
          officialExtensions:
            - siderolabs/i915-ucode
            - siderolabs/intel-ucode
            - siderolabs/mei
            - siderolabs/realtek-firmware
    controlPlane: true
    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: true
        vip:
          ip: "192.168.42.120"
        vlans:
          - vlanId: 10
            dhcp: false
          - vlanId: 70
            dhcp: false
    patches:
      # Custom sysfs settings
      - |-
        machine:
          sysfs:
            devices.system.cpu.cpufreq.boost: 0
  - hostname: k8s-1
    ipAddress: "192.168.42.11"
    schematic: &schematic
      customization:
        extraKernelArgs:
          - cpufreq.default_governor=performance
          - intel_pstate=disable
          - mitigations=off
          - net.ifnames=0
        systemExtensions:
          officialExtensions:
            - siderolabs/qemu-guest-agent
    installDisk: /dev/sda
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: true
        vlans:
          - vlanId: 10
            dhcp: false
          - vlanId: 70
            dhcp: false
  - hostname: k8s-2
    ipAddress: "192.168.42.12"
    schematic: *schematic
    installDisk: /dev/sda
    controlPlane: false
    networkInterfaces:
      - deviceSelector:
          busPath: "0*"
        dhcp: true
        vlans:
          - vlanId: 10
            dhcp: false
          - vlanId: 70
            dhcp: false

patches:
    # Configure nfs mount options & containerd
  - |-
    machine:
      files:
        - op: create
          path: /etc/cri/conf.d/20-customization.part
          content: |
            [plugins."io.containerd.grpc.v1.cri"]
              enable_unprivileged_ports = true
              enable_unprivileged_icmp = true
            [plugins."io.containerd.grpc.v1.cri".containerd]
              discard_unpacked_layers = false
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
              discard_unpacked_layers = false
        - op: overwrite
          path: /etc/nfsmount.conf
          permissions: 0o644
          content: |
            [ NFSMount_Global_Options ]
            nfsvers=4.2
            hard=True
            nconnect=4
            noatime=True
            rsize=1048576
            wsize=1048576

  # Configure udev rules
  - |-
    machine:
      udev:
        rules:
          # Intel GPU
          - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"

  # Enable cluster discovery
  - |-
    cluster:
      discovery:
        registries:
          kubernetes:
            disabled: false
          service:
            disabled: true

  # Configure kubelet
  - |-
    machine:
      kubelet:
        extraArgs:
          rotate-server-certificates: true
        extraConfig:
          maxPods: 150
        nodeIP:
          validSubnets:
            - "192.168.42.0/24"

  # Enable host dns
  - |-
    machine:
      features:
        hostDNS:
          enabled: true
          resolveMemberNames: true
          forwardKubeDNSToHost: false # Incompatible with Cilium bpf masquerade

  # Custom sysctl settings
  - |-
    machine:
      sysctls:
        fs.inotify.max_user_watches: 1048576
        fs.inotify.max_user_instances: 8192
        net.core.netdev_max_backlog: 30000
        net.core.rmem_max: 67108864
        net.core.wmem_max: 67108864
        net.ipv4.tcp_rmem: 4096 87380 33554432
        net.ipv4.tcp_wmem: 4096 65536 33554432
        net.ipv4.tcp_tw_reuse: 1
        net.ipv4.tcp_window_scaling: 1

  # Custom sysfs settings
  # - |-
  #   machine:
  #     sysfs:
  #       devices.system.cpu.cpufreq.boost: 0

  # Mount openebs-hostpath in kubelet
  - |-
    machine:
      kubelet:
        extraMounts:
          - destination: /var/openebs/local
            type: bind
            source: /var/openebs/local
            options: ["bind", "rshared", "rw"]

controlPlane:
  nodeLabels:
    topology.kubernetes.io/region: main
    topology.kubernetes.io/zone: m
  patches:
    # Cluster configuration
    - |-
      cluster:
        allowSchedulingOnControlPlanes: true
        controllerManager:
          extraArgs:
            bind-address: 0.0.0.0
        coreDNS:
          disabled: true
        proxy:
          disabled: true
        scheduler:
          extraArgs:
            bind-address: 0.0.0.0
          config:
            apiVersion: kubescheduler.config.k8s.io/v1
            kind: KubeSchedulerConfiguration
            profiles:
              - schedulerName: default-scheduler
                pluginConfig:
                  - name: PodTopologySpread
                    args:
                      defaultingType: List
                      defaultConstraints:
                        - maxSkew: 1
                          topologyKey: kubernetes.io/hostname
                          whenUnsatisfiable: ScheduleAnyway

    # ETCD configuration
    - |-
      cluster:
        etcd:
          extraArgs:
            listen-metrics-urls: http://0.0.0.0:2381
          advertisedSubnets:
            - 192.168.42.0/24

    # Disable default API server admission plugins.
    - |-
      - op: remove
        path: /cluster/apiServer/admissionControl

    # Enable K8s Talos API Access
    - |-
      machine:
        features:
          kubernetesTalosAPIAccess:
            enabled: true
            allowedRoles:
              - "os:admin"
            allowedKubernetesNamespaces:
              - "system-upgrade"

worker:
  nodeLabels:
    topology.kubernetes.io/region: main
    topology.kubernetes.io/zone: w
  patches:
    # Custom sysfs settings
    - |-
      machine:
        sysfs:
          block.sdb.queue.scheduler: none
          # devices.system.cpu.cpufreq.boost: 0
