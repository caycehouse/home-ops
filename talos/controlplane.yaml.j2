---
# yaml-language-server: $schema=https://raw.githubusercontent.com/siderolabs/talos/refs/heads/release-1.10/website/content/v1.10/schemas/config.schema.json
version: v1alpha1
machine:
  token: op://kubernetes/talos/MACHINE_TOKEN
  ca:
    crt: op://kubernetes/talos/MACHINE_CA_CRT
    key: op://kubernetes/talos/MACHINE_CA_KEY
  certSANs: ["127.0.0.1", "192.168.42.120"]
  kubelet:
    image: ghcr.io/siderolabs/kubelet:{{ ENV.KUBERNETES_VERSION }}
    extraConfig:
      serializeImagePulls: false
    extraMounts:
      - destination: /var/openebs/local
        type: bind
        source: /var/openebs/local
        options: ["bind", "rshared", "rw"]
    defaultRuntimeSeccompProfileEnabled: true
    nodeIP:
      validSubnets: ["192.168.42.0/24"]
    disableManifestsDirectory: true
  network:
    interfaces:
      - interface: bond0
        bond:
          mode: active-backup
          deviceSelectors:
            - hardwareAddr: 00:e0:4c:68:*
              driver: r8169
        mtu: 1500
        dhcp: true
        vip:
          ip: 192.168.42.120
        vlans:
          - { vlanId: 10, dhcp: false, mtu: 1500 }
          - { vlanId: 70, dhcp: false, mtu: 1500 }
  install:
    image: factory.talos.dev/metal-installer/38b7f94a429c1403b7cdf321d95bf60bdb041c2434c0c7928d7cf94d161ae248:v1.10.6
    wipe: false
  files:
    - op: create
      path: /etc/cri/conf.d/20-customization.part
      content: |
        [plugins."io.containerd.cri.v1.images"]
          discard_unpacked_layers = false
        [plugins."io.containerd.cri.v1.runtime"]
          device_ownership_from_security_context = true
    - op: overwrite
      path: /etc/nfsmount.conf
      permissions: 0o644
      content: |
        [ NFSMount_Global_Options ]
        nfsvers=4.2
        hard=True
        nconnect=16
        noatime=True
  sysctls:
    fs.inotify.max_user_watches: "1048576"     # Watchdog
    fs.inotify.max_user_instances: "8192"      # Watchdog
    net.core.default_qdisc: fq                 # 10Gb/s
    net.core.rmem_max: "67108864"              # 10Gb/s | Cloudflared / QUIC
    net.core.wmem_max: "67108864"              # 10Gb/s | Cloudflared / QUIC
    net.ipv4.neigh.default.gc_thresh1: "4096"  # Prevent ARP cache overflows
    net.ipv4.neigh.default.gc_thresh2: "8192"  # Prevent ARP cache overflows
    net.ipv4.neigh.default.gc_thresh3: "16384" # Prevent ARP cache overflows
    net.ipv4.tcp_congestion_control: bbr       # 10Gb/s
    net.ipv4.tcp_fastopen: "3"                 # Send and accept data in the opening SYN packet
    net.ipv4.tcp_mtu_probing: "1"              # 10Gb/s | Jumbo frames
    net.ipv4.tcp_rmem: 4096 87380 33554432     # 10Gb/s
    net.ipv4.tcp_wmem: 4096 65536 33554432     # 10Gb/s
    net.ipv4.tcp_window_scaling: "1"           # 10Gb/s
    sunrpc.tcp_slot_table_entries: "128"       # 10Gb/s | NFS
    sunrpc.tcp_max_slot_table_entries: "128"   # 10Gb/s | NFS
    user.max_user_namespaces: "11255"          # User Namespaces
    vm.nr_hugepages: "1024"                    # PostgreSQL
  features:
    rbac: true
    stableHostname: true
    kubernetesTalosAPIAccess:
      enabled: true
      allowedRoles: ["os:admin"]
      allowedKubernetesNamespaces: ["actions-runner-system", "system-upgrade"]
    apidCheckExtKeyUsage: true
    diskQuotaSupport: true
    kubePrism:
      enabled: false
    hostDNS:
      enabled: true
      resolveMemberNames: true
      forwardKubeDNSToHost: false
  kernel:
    modules:
      - name: nbd
  nodeLabels:
    intel.feature.node.kubernetes.io/gpu: "true"
    topology.kubernetes.io/region: main
    topology.kubernetes.io/zone: m
cluster:
  id: op://kubernetes/talos/CLUSTER_ID
  secret: op://kubernetes/talos/CLUSTER_SECRET
  controlPlane:
    endpoint: https://192.168.42.120:6443
  clusterName: main
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets: ["10.69.0.0/16"]
    serviceSubnets: ["10.96.0.0/16"]
  coreDNS:
    disabled: true
  token: op://kubernetes/talos/CLUSTER_TOKEN
  secretboxEncryptionSecret: op://kubernetes/talos/CLUSTER_SECRETBOXENCRYPTIONSECRET
  ca:
    crt: op://kubernetes/talos/CLUSTER_CA_CRT
    key: op://kubernetes/talos/CLUSTER_CA_KEY
  aggregatorCA:
    crt: op://kubernetes/talos/CLUSTER_AGGREGATORCA_CRT
    key: op://kubernetes/talos/CLUSTER_AGGREGATORCA_KEY
  serviceAccount:
    key: op://kubernetes/talos/CLUSTER_SERVICEACCOUNT_KEY
  discovery:
    enabled: false
  apiServer:
    image: registry.k8s.io/kube-apiserver:{{ ENV.KUBERNETES_VERSION }}
    extraArgs:
      enable-aggregator-routing: "true"
      feature-gates: MutatingAdmissionPolicy=true
      runtime-config: admissionregistration.k8s.io/v1alpha1=true
    certSANs: ["127.0.0.1", "192.168.42.120"]
    disablePodSecurityPolicy: true
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:{{ ENV.KUBERNETES_VERSION }}
    extraArgs:
      bind-address: 0.0.0.0
  proxy:
    disabled: true
    image: registry.k8s.io/kube-proxy:{{ ENV.KUBERNETES_VERSION }}
  scheduler:
    image: registry.k8s.io/kube-scheduler:{{ ENV.KUBERNETES_VERSION }}
    extraArgs:
      bind-address: 0.0.0.0
    config:
      apiVersion: kubescheduler.config.k8s.io/v1
      kind: KubeSchedulerConfiguration
      profiles:
        - schedulerName: default-scheduler
          plugins:
            score:
              disabled:
                - name: ImageLocality
          pluginConfig:
            - name: PodTopologySpread
              args:
                defaultingType: List
                defaultConstraints:
                  - maxSkew: 1
                    topologyKey: kubernetes.io/hostname
                    whenUnsatisfiable: ScheduleAnyway
  etcd:
    ca:
      crt: op://kubernetes/talos/CLUSTER_ETCD_CA_CRT
      key: op://kubernetes/talos/CLUSTER_ETCD_CA_KEY
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
    advertisedSubnets: ["192.168.42.0/24"]
  allowSchedulingOnControlPlanes: true
---
apiVersion: v1alpha1
kind: WatchdogTimerConfig
device: /dev/watchdog0
timeout: 5m
